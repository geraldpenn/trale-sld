--- trale.orig/ghooks.pl	2009-03-28 20:29:47.000000000 +0100
+++ trale/ghooks.pl	2009-03-31 03:57:53.000000000 +0200
@@ -158,7 +158,6 @@
 
 grisu_portray_fs(Stream,Type,FS,KeyedFeats,
                  Vis0,Vis,Tags0,Tags,HD0,HD,ToplevelFlagAss) :-
-
    toplevel_init(FS,Tags0,ToplevelFlagAss,HD0,HD1),
 
    % retrieve the information we stored in the HD arg. between callbacks:
@@ -708,6 +707,11 @@
 
 % HACK: no calling description display yet
 portray_cat(Words,_Desc,FS,Residue,Index) :-
+%write(Words),nl,
+%write(Desc),nl,
+% write('FS: '), write(FS),nl,
+%write(Residue),nl,
+%write(Index),nl,
   grale_flag,
   list_to_double_quoted_string(Words,DQWords),  % KNOWN BUG: must handle var Words arg for gen/1.
   ( ale_lists_defined -> clause(fcolour(hd,HdPos,_),true),
@@ -730,6 +734,28 @@
 	 pp_fs(FS,0,Dups,_,AssocIn,_,0,HD,_)),
   grale_nl,grale_flush_output.
 
+portray_fs_standalone(Label,FS) :-
+  grale_flag,
+  list_to_double_quoted_string([Label],DQString),
+  append("!newdata",DQString,GraleCommandPrefix),
+  grale_write_chars(GraleCommandPrefix),
+  \+ \+ (empty_assoc(AssocIn),
+         duplicates(FS,AssocIn,Dups,AssocIn,_,0,Num),
+         put_assoc(id_index,AssocIn,Num,HD),
+         pp_fs(FS,0,Dups,_,AssocIn,_,0,HD,_)),
+  grale_nl,
+  grale_flush_output.
+
+% KE: TODO maybe encapsulate this again and provide a predicate to portray any number of "interconnected" FSs
+portray_fs_standalone(Label,FS,DupsIn,DupsOut,VisIn,VisOut,Num,HDIn,HDOut) :-
+  grale_flag,
+  list_to_double_quoted_string([Label],DQString),
+  append("!newdata",DQString,GraleCommandPrefix),
+  grale_write_chars(GraleCommandPrefix),
+  pp_fs(FS,0,DupsIn,DupsOut,VisIn,VisOut,Num,HDIn,HDOut),
+  grale_nl,
+  grale_flush_output.
+
 debug_semres([]).
 debug_semres([Suspension|SemRes]) :-
   arg(3,Suspension,subterm:C),
@@ -856,8 +882,18 @@
 
 % ==============================================================================
 
-% this catches the pp_fs/1 call in portray_cat/4
+% this catches the pp_fs/1 call in portray_cat/5
+% KE: TODO: enable support of tagged FSs on the top level
 portray_fs(Type,FS,MGType,KeyedFeats,VisIn,VisOut,DupsIn,DupsOut,Col,HDIn,HDOut) :-
+%write(Type), nl,
+%write(FS), nl,
+%write(MGType), nl,
+%write(KeyedFeats), nl,
+%write(VisIn), nl,
+%write(DupsIn), nl,
+%write(Col), nl,
+%write(HDIn), nl,
+%write(HDOut), nl,
   ( get_assoc(id_index,HDIn,ID0,HDMid,IDMid) -> PortrayTreeReEntrancies = false
   ; get_assoc(top_index,HDIn,ID0), get_assoc(tree_struc,HDIn,Tree),
     put_assoc(id_index,HDIn,IDMid,HDMid),
@@ -1179,6 +1215,12 @@
   args_to_double_quoted_string_act(NewN,A,Term,44,ArgStringMid,Rest).
 
 :- dynamic grdebug/1.
+:- dynamic redirect_grale_output_to_tralesld/1.
+
+grale_write_chars(Chars) :-
+  redirect_grale_output_to_tralesld(StepID),
+  !,
+  tralesld_grale_message_chunk(StepID,Chars).
 
 grale_write_chars(Chars) :-
   dget_output_stream(GraleOStream),
@@ -1186,10 +1228,20 @@
   write(GraleOStream,String).
 
 grale_nl :-
+  redirect_grale_output_to_tralesld(StepID),
+  !,
+  tralesld_grale_message_chunk(StepID,[10]),
+  tralesld_grale_message_end(StepID).
+
+grale_nl :-
   dget_output_stream(GraleOStream),
   nl(GraleOStream).
 
 grale_flush_output :-
+  redirect_grale_output_to_tralesld(_),
+  !.
+
+grale_flush_output :-
   dget_output_stream(GraleOStream),
   flush_output(GraleOStream).
 
