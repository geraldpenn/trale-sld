253a254,262
> % Added hook get_reply_hook/1 which allows for providing an alternative input
> % method for debugger commands.
> % Added hooks for announcing parsing steps to a client (such as the interface to
> % a graphical debugger): announce_parse_begin_hook/1, announce_step_hook/3, 
> % announce_call_hook/0, announce_fail_hook/0, announce_finished_hook/0,
> % announce_exit_hook/0, announce_redo_hook/1. For usage, see sample_client.pl.
> % Retry at Fail port now handled with ale_retry exception.
> % 3/2/09 - K. Evang
> 
402a412
>   announce_parse_begin(Ws),
455a466,467
> a(b) --> c(d), e(f).
> 
842a855,858
>   (current_predicate(
>        announce_edge_added_hook,announce_edge_added_hook(_,_,_,_)) ->
>      call_all(announce_edge_added_hook(N,Left,Right,RuleName)) ;
>      true),
847a864,867
>   (current_predicate(
>        announce_edge_retrieved_hook,announce_edge_retrieved_hook(_)) ->
>      call_all(announce_edge_retrieved_hook(N)) ;
>      true),
1858c1878,1882
< d_meta_interp(PortCommand,Line,Goal) :-	       
---
> d_meta_interp(PortCommand,Line,Goal) :-
>   d_meta_interp(PortCommand,Line,Goal,false).
> 
> d_meta_interp(PortCommand,Line,Goal,Retrying) :-
>   (Retrying -> true ; announce_step(PortCommand,Line,Goal,StepID)),
1860c1884
<     (d_call_fail(PortCommand,Line),
---
>     (d_call_fail(StepID,PortCommand,Line,Goal),
1863c1887
<        d_exit_redo(PortCommand,Line,DetFlag)),
---
>        d_exit_redo(StepID,PortCommand,Line,Goal,DetFlag)),
1865c1889
<   d_meta_interp(PortCommand,Line,Goal)),
---
>   d_meta_interp(PortCommand,Line,Goal,true)),
1878a1903,1957
> %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
> % Announcement of parsing steps
> 
> :- dynamic last_step_id/1.
> :- multifile clear_hook/0.
> 
> clear_hook :-
>   retractall(last_step_id(_)),
>   asserta(last_step_id(0)).
> 
> announce_parse_begin(Words) :-
>   current_predicate(announce_parse_begin_hook,announce_parse_begin_hook(_)) ->
>     call_all(announce_parse_begin_hook(Words)) ;
>     true.
> 
> announce_step(Command,Line,Goal,StepID) :-
>   parsing(_) -> (
>     retract(last_step_id(OldStepID)),
>     StepID is OldStepID + 1,
>     asserta(last_step_id(StepID)),
>     current_predicate(announce_step_hook,announce_step_hook(_,_,_,_)) ->
>       call_all(announce_step_hook(StepID,Command,Line,Goal)) ;
>       true
>   ) ; true.
> 
> announce_call(StepID,Command,Line,Goal) :-
>   parsing(_) -> (
>     current_predicate(announce_call_hook,announce_call_hook(_,_,_,_)) ->
>       call_all(announce_call_hook(StepID,Command,Line,Goal)) ; true
>   ) ; true.
> 
> announce_fail(StepID,Command,Line,Goal) :-
>   parsing(_) -> (
>     current_predicate(announce_fail_hook,announce_fail_hook(_,_,_,_)) ->
>       call_all(announce_fail_hook(StepID,Command,Line,Goal)) ; true
>   ) ; true.
> 
> announce_finished(StepID,Command,Line,Goal) :-
>   parsing(_) -> (
>     current_predicate(announce_finished_hook,announce_finished_hook(_,_,_,_)) ->
>       call_all(announce_finished_hook(StepID,Command,Line,Goal)) ; true
>   ) ; true.
> 
> announce_exit(StepID,Command,Line,Goal) :-
>   parsing(_) -> (
>     current_predicate(announce_exit_hook,announce_exit_hook(_,_,_,_)) ->
>       call_all(announce_exit_hook(StepID,Command,Line,Goal)) ; true
>   ) ; true.
> 
> announce_redo(StepID,Command,Line,Goal) :-
>   parsing(_) -> (
>     current_predicate(announce_redo_hook,announce_redo_hook(_,_,_,_)) ->
>       call_all(announce_redo_hook(StepID,Command,Line,Goal)) ; true
>   ) ; true.
> 
1881c1960
< d_call_fail(Command,Line) :-
---
> d_call_fail(StepID,Command,Line,Goal) :-
1891a1971
>     announce_call(StepID,Command,Line,Goal),
1895c1975
< d_call_fail(Command,Line) :-
---
> d_call_fail(StepID,Command,Line,Goal) :-
1906c1986,1987
<   
---
> 
>     (failure_driven(Command) -> announce_finished(StepID,Command,Line,Goal) ; announce_fail(StepID,Command,Line,Goal)),
1928c2009
< %	    ; nl(user_error), flush_output(user_error), abort
---
> %	    ; nl(user_error), flush_output(user_error), f
1944c2025
<         ttyget0(Reply),
---
>         get_reply(Reply),
1959c2040
<         ttyget0(Reply),
---
>         get_reply(Reply),
1970c2051
<       ttyget0(Reply),
---
>       get_reply(Reply),
1976d2056
<   skip_line,
1979c2059
<   !,skip_line,
---
>   !,
1982c2062
<   !,skip_line,
---
>   !,
1986c2066
<   !,skip_line.
---
>   !.
1988c2068
<   !,skip_line,
---
>   !,
1992c2072
<   !,skip_line,
---
>   !,
1996c2076
<   !,skip_line,
---
>   !,
2000c2080
<   !,skip_line,
---
>   !,
2004c2084
<   !,skip_line,
---
>   !,
2008c2088
<   !,skip_line,
---
>   !,
2021c2101
<   ttyget0(Reply),
---
>   get_reply(Reply),
2026c2106
<   !,skip_line,
---
>   !,
2042d2121
<   skip_line,
2055c2134
<       ttyget0(Reply),
---
>       get_reply(Reply),
2067c2146
<       ttyget0(Reply),
---
>       get_reply(Reply),
2079c2158
<       ttyget0(Reply),
---
>       get_reply(Reply),
2086c2165
<     ttyget0(Reply),
---
>     get_reply(Reply),
2092d2170
<   skip_line,
2095c2173
<   !,skip_line,
---
>   !,
2100c2178
<   !,skip_line,
---
>   !,
2102,2104c2180,2182
< daf_act(114,_Skip,Command,Line) :- % (r)etry
<   !,skip_line,
<   d_call_fail(Command,Line).
---
> daf_act(114,_,_,_) :- % (r)etry
>   !,
>   raise_exception(ale_retry).
2108c2186
<   !,skip_line,
---
>   !,
2113c2191
<   !,skip_line,
---
>   !,
2117c2195
<   !,skip_line,
---
>   !,
2121c2199
<   !,skip_line,
---
>   !,
2125c2203
<   !,skip_line,
---
>   !,
2138c2216
<   ttyget0(Reply),
---
>   get_reply(Reply),
2141c2219
<   !,skip_line,
---
>   !,
2157d2234
<   skip_line,
2164c2241
< d_exit_redo(Command,Line,DetFlag) :-
---
> d_exit_redo(StepID,Command,Line,Goal,DetFlag) :-
2174a2252
>      announce_exit(StepID,Command,Line,Goal),
2178c2256
< d_exit_redo(Command,Line,_) :-
---
> d_exit_redo(StepID,Command,Line,Goal,_) :-
2189a2268
>    announce_redo(StepID,Command,Line,Goal),
2200c2279
<       ttyget0(Reply),
---
>       get_reply(Reply),
2211c2290
<       ttyget0(Reply),
---
>       get_reply(Reply),
2222c2301
<       ttyget0(Reply),
---
>       get_reply(Reply),
2229c2308
<     ttyget0(Reply),
---
>     get_reply(Reply),
2235d2313
<   skip_line,
2238c2316
<   !,skip_line,
---
>   !,
2241c2319
<   !,skip_line,
---
>   !,
2245c2323
<   !,skip_line.
---
>   !.
2247c2325
<   !,skip_line,
---
>   !,
2252c2330
<   !,skip_line,
---
>   !,
2256c2334
<   !,skip_line,
---
>   !,
2260c2338
<   !,skip_line,
---
>   !,
2264c2342
<   !,skip_line,
---
>   !,
2268c2346
<   !,skip_line,
---
>   !,
2281c2359
<   ttyget0(Reply),
---
>   get_reply(Reply),
2284c2362
<   !,skip_line,
---
>   !,
2300d2377
<   skip_line,
2318c2395
<         ttyget0(Reply),
---
>         get_reply(Reply),
2335c2412
<         ttyget0(Reply),
---
>         get_reply(Reply),
2347c2424
<       ttyget0(Reply),
---
>       get_reply(Reply),
2353d2429
<   skip_line,
2356c2432
<   !,skip_line,
---
>   !,
2359c2435
<   !,skip_line,
---
>   !,
2364c2440
<   !,skip_line,
---
>   !,
2367c2443
<   !,skip_line,
---
>   !,
2370c2446
<   !,skip_line,
---
>   !,
2377c2453
<   !,skip_line,
---
>   !,
2382c2458
<   !,skip_line,
---
>   !,
2386c2462
<   !,skip_line,
---
>   !,
2390c2466
<   !,skip_line,
---
>   !,
2394c2470
<   !,skip_line,
---
>   !,
2407c2483
<   ttyget0(Reply),
---
>   get_reply(Reply),
2410c2486
<   !,skip_line,
---
>   !,
2427d2502
<   skip_line,
2430a2506,2519
>   
> % get_reply(-Reply)
> %   Called when waiting at a step to get the reply of the user or the steering
> %   application. If the hook get_reply_hook/1 is defined, it will be used. If
> %   not, the default strategy (read one character from the terminal) will be
> %   used.
> get_reply(Reply) :-
>   current_predicate(get_reply_hook, get_reply_hook(_)),
>   get_reply_hook(Reply),
>   !.
> 
> get_reply(Reply) :-
>   get_code(Reply),
>   (Reply =:= 10 -> true ; skip_line).
2686c2775
< display_current(apply_once(_,empty(N,-1,FS,Dtrs,RuleName),
---
> display_current(apply_once(_,empty(N,-1,FS,Dtrs,RuleName),  % TODO graphical output
2691,2693c2780,2786
< display_current(forall_rules(RuleName,FS)) :-
<   !,write('CREATED BY: '),write(RuleName),nl,
<   pp_fs(FS),nl.
---
> display_current(forall_rules(RuleName,FS)) :-               % TODO add useful labe
>   !,
>   ((current_predicate(portray_fs_standalone,portray_fs_standalone(_,_)),
>     portray_fs_standalone('FS',FS))
>    -> true
>    ;  write('CREATED BY: '),write(RuleName),nl,
>       pp_fs(FS),nl).
2695,2696c2788,2793
<   !,write('CREATED BY: '),write(RuleName),nl,
<   pp_fs(FS),nl.
---
>   !,
>   ((current_predicate(portray_fs_standalone,portray_fs_standalone(_,_)),
>    portray_fs_standalone('FS',FS))
>   -> true
>    ; write('CREATED BY: '),write(RuleName),nl,
>      pp_fs(FS),nl).
2698,2699c2795,2800
<   !,write('CREATED BY: '),write(RuleName),nl,
<   pp_fs(FS),nl.
---
>   !,
>   ((current_predicate(portray_fs_standalone,portray_fs_standalone(_,_)),
>    portray_fs_standalone('FS',FS))
>   -> true
>    ; write('CREATED BY: '),write(RuleName),nl,
>      pp_fs(FS),nl).
2701,2703c2802,2809
<   !,write('CREATED BY: '),write(RuleName),nl,
<   write('MOTHER: '),pp_fs(FS),nl,
<   write('DAUGHTERS: '),pp_fs(Dtrs),nl.
---
>   !,
>   ((current_predicate(portray_fs_standalone,portray_fs_standalone(_,_)),
>    portray_fs_standalone('Mother',FS),
>    portray_fs_standalone('Daughters',Dtrs))
>   -> true
>    ; write('CREATED BY: '),write(RuleName),nl,
>      write('MOTHER: '),pp_fs(FS),nl,
>      write('DAUGHTERS: '),pp_fs(Dtrs),nl).
2705,2706c2811,2816
<   !,write('WORD: '),write(Word),nl,
<   pp_fs(FS),nl.
---
>   !,
>   ((current_predicate(portray_fs_standalone,portray_fs_standalone(_,_)),
>    portray_fs_standalone('FS',FS))
>   -> true
>    ; write('WORD: '),write(Word),nl,
>      pp_fs(FS),nl).
2708,2709c2818,2823
<   !,write('WORD: '),write(Word),nl,
<   pp_fs(FS),nl.
---
>   !,
>   ((current_predicate(portray_fs_standalone,portray_fs_standalone(_,_)),
>    portray_fs_standalone('FS',FS))
>   -> true
>    ; write('WORD: '),write(Word),nl,
>      pp_fs(FS),nl).
2711,2712c2825,2830
<   !,write('WORD: '),write(Word),nl,
<   pp_fs(FS),nl.
---
>   !,
>   ((current_predicate(portray_fs_standalone,portray_fs_standalone(_,_)),
>    portray_fs_standalone('FS',FS))
>   -> true
>    ; write('WORD: '),write(Word),nl,
>      pp_fs(FS),nl).
2714,2716c2832,2838
<   !,write('WORD: '),write(Word),nl,
<   pp_fs(FS),nl.
< display_current(unify(_,VarName,FS,Var)) :-
---
>   !,
>   ((current_predicate(portray_fs_standalone,portray_fs_standalone(_,_)),
>    portray_fs_standalone('FS',FS))
>   -> true
>    ; write('WORD: '),write(Word),nl,
>      pp_fs(FS),nl).
> display_current(unify(_,VarName,FS,Var)) :- % KE: TODO: make underlying machinery functional, re-encapsulate portraying functionality
2717a2840
>            %duplicates_list([FS,Var],AssocIn,DupsMid,AssocIn,_,0,_),
2719,2722c2842,2861
<             write('CURRENT STRUCTURE:'),nl,
<             pp_fs(FS,DupsMid,DupsMid2,AssocIn,VisMid,0,AssocIn,HDMid),nl,
<             write('VARIABLE, '),write(VarName),write(':'),nl,
<             pp_fs(Var,DupsMid2,_,VisMid,_,0,HDMid,_),nl)).
---
>             ((current_predicate(portray_fs_standalone,portray_fs_standalone(_,_,_,_,_,_,_,_,_)),
> list_to_double_quoted_string(['CURRENT STRUCTURE'],DQString),
> append("!newdata",DQString,GraleCommandPrefix),
> grale_write_chars(GraleCommandPrefix),
>               put_assoc(id_index,AssocIn,0,HD),
>               pp_fs(FS,DupsMid,DupsMid2,AssocIn,VisMid,0,HD,HDMid),
> grale_nl,
> grale_flush_output,
> atom_concat('VARIABLE ', VarName, VarLabel),
> list_to_double_quoted_string([VarLabel],DQString2),
> append("!newdata",DQString2,GraleCommandPrefix2),
> grale_write_chars(GraleCommandPrefix2),
>               pp_fs(Var,DupsMid2,_,VisMid,_,0,HDMid,_),
> grale_nl,
> grale_flush_output)
>              -> true
>               ; write('CURRENT STRUCTURE:'),nl,
>                 pp_fs(FS,DupsMid,DupsMid2,AssocIn,VisMid,0,AssocIn,HDMid),nl,
>                 write('VARIABLE, '),write(VarName),write(':'),nl,
>                 pp_fs(Var,DupsMid2,_,VisMid,_,0,HDMid,_),nl))).
2724c2863,2867
<   !,pp_fs(FS),nl.
---
>   !,
>   ((current_predicate(portray_fs_standalone,portray_fs_standalone(_,_)),
>    portray_fs_standalone('FS',FS))
>   -> true
>    ; pp_fs(FS),nl).
2726c2869,2873
<   !,pp_fs(FS),nl.
---
>   !,
>   ((current_predicate(portray_fs_standalone,portray_fs_standalone(_,_)),
>    portray_fs_standalone('FS',FS))
>   -> true
>    ; pp_fs(FS),nl).
2728c2875,2879
<   !,pp_fs(FS),nl.
---
>   !,
>   ((current_predicate(portray_fs_standalone,portray_fs_standalone(_,_)),
>    portray_fs_standalone('FS',FS))
>   -> true
>    ; pp_fs(FS),nl).
2730c2881,2885
<   !,pp_fs(FS),nl.
---
>   !,
>   ((current_predicate(portray_fs_standalone,portray_fs_standalone(_,_)),
>    portray_fs_standalone('FS',FS))
>   -> true
>    ; pp_fs(FS),nl).
2732c2887,2891
<   !,pp_fs(FS),nl.
---
>   !,
>   ((current_predicate(portray_fs_standalone,portray_fs_standalone(_,_)),
>    portray_fs_standalone('FS',FS))
>   -> true
>    ; pp_fs(FS),nl).
2734c2893,2897
<   !,pp_fs(FS),nl.
---
>   !,
>   ((current_predicate(portray_fs_standalone,portray_fs_standalone(_,_)),
>    portray_fs_standalone('FS',FS))
>   -> true
>    ; pp_fs(FS),nl).
2736c2899,2903
<   !,pp_fs(FS),nl.
---
>   !,
>   ((current_predicate(portray_fs_standalone,portray_fs_standalone(_,_)),
>    portray_fs_standalone('FS',FS))
>   -> true
>    ; pp_fs(FS),nl).
2738c2905,2910
<   !,pp_fs(FS),nl.
---
>   !,
>   ((current_predicate(portray_fs_standalone,portray_fs_standalone(_,_)),
>    portray_fs_standalone('FS',FS))
>   -> true
>    ; pp_fs(FS),nl).
> 
2873a3046
> 
