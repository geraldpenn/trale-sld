#summary Project description in note form

= Visualization =

  * of the grammar:
    * sort hierarchy with attribute appropriateness
    * phrase structure rules (GraleJ)
  * of the parsing process:
    * chart display (martinlaz)
    * inspect feature structures (GraleJ)
    * variable bindings
    * highlight changed parts of structures after each parsing steps

= Control =

  * steer the tracer via GUI buttons (and GUI keyboard shortcuts)

= Advanced Features =

_(will probably require extending TRALE itself a lot, to be investigated)_

  * direct links from generated (sub)structures to the principles/ID schemata/signature entries/... that licensed those structures
  * ability to Retry a specific step (other than the one that has just completed)

= Architecture =

  * parallelism (no GUI freeze while TRALE is working)
  * communication between Prolog and Java: Socket, client-server architecture? Jasper?
  * modular, facility to add visualization components